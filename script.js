// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const API_KEY = "0385b4b3574b96a26453f275b7d20a02";
let currentCityName = "–ú–æ—Å–∫–≤–∞";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();
tg.setHeaderColor('#4CAF50');
tg.setBackgroundColor('#f0f8ff');
document.body.dataset.theme = tg.colorScheme;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const cityInput = document.getElementById('city-input');
const searchBtn = document.getElementById('search-btn');
const currentIcon = document.getElementById('current-icon');
const currentTemp = document.getElementById('current-temp');
const currentCity = document.getElementById('current-city');
const humidity = document.getElementById('humidity');
const wind = document.getElementById('wind');
const forecastContainer = document.getElementById('forecast');

// –ò–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã
const weatherIcons = {
    '01d': '‚òÄÔ∏è', '01n': 'üåô',
    '02d': '‚õÖ', '02n': '‚õÖ',
    '03d': '‚òÅÔ∏è', '03n': '‚òÅÔ∏è',
    '04d': '‚òÅÔ∏è', '04n': '‚òÅÔ∏è',
    '09d': 'üåßÔ∏è', '09n': 'üåßÔ∏è',
    '10d': 'üå¶Ô∏è', '10n': 'üå¶Ô∏è',
    '11d': '‚õàÔ∏è', '11n': '‚õàÔ∏è',
    '13d': '‚ùÑÔ∏è', '13n': '‚ùÑÔ∏è',
    '50d': 'üå´Ô∏è', '50n': 'üå´Ô∏è'
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–≥–æ–¥—ã
async function fetchWeather(city) {
    try {
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑
        forecastContainer.innerHTML = '';
        
        // –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞
        const currentResponse = await fetch(
            `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}&lang=ru`
        );
        const currentData = await currentResponse.json();
        
        if (currentData.cod !== 200) {
            throw new Error("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.");
        }

        // –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π
        const forecastResponse = await fetch(
            `https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}&lang=ru`
        );
        const forecastData = await forecastResponse.json();
        
        if (forecastData.cod !== "200") {
            throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞");
        }

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        displayWeather(currentData, forecastData);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥
        localStorage.setItem('lastCity', city);
        currentCityName = city;
        
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
        if (cityInput.value.trim()) {
            tg.showAlert("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.");
        }
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
function displayWeather(current, forecast) {
    // –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞
    currentIcon.textContent = weatherIcons[current.weather[0].icon] || 'üå§Ô∏è';
    currentTemp.textContent = `${Math.round(current.main.temp)}¬∞C`;
    currentCity.textContent = current.name;
    humidity.textContent = `üíß ${current.main.humidity}%`;
    wind.textContent = `üå¨Ô∏è ${Math.round(current.wind.speed)} –º/—Å`;

    // –ü—Ä–æ–≥–Ω–æ–∑ (—É–±–µ–¥–∏–º—Å—è, —á—Ç–æ forecast.list —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if (forecast && forecast.list) {
        const dailyForecast = forecast.list.filter((item, index) => index % 8 === 0);
        
        dailyForecast.slice(0, 5).forEach(day => {
            const date = new Date(day.dt * 1000);
            const dayName = date.toLocaleDateString('ru', { weekday: 'short' });
            
            const forecastItem = document.createElement('div');
            forecastItem.className = 'forecast-item';
            forecastItem.innerHTML = `
                <div>${dayName}</div>
                <div style="font-size:24px">${weatherIcons[day.weather[0].icon] || 'üå§Ô∏è'}</div>
                <div>${Math.round(day.main.temp)}¬∞C</div>
            `;
            
            forecastContainer.appendChild(forecastItem);
        });
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è
    if (window.gsap) {
        gsap.from(".current-weather, .forecast-item", {
            opacity: 0,
            y: 20,
            stagger: 0.1,
            duration: 0.5
        });
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
searchBtn.addEventListener('click', () => {
    const city = cityInput.value.trim();
    if (city) {
        fetchWeather(city);
    }
});

cityInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        searchBtn.click();
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
document.addEventListener('DOMContentLoaded', () => {
    const savedCity = localStorage.getItem('lastCity') || '–ú–æ—Å–∫–≤–∞';
    cityInput.value = savedCity;
    fetchWeather(savedCity);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ç–µ–º—ã Telegram
tg.onEvent('themeChanged', () => {
    document.body.dataset.theme = tg.colorScheme;
});
